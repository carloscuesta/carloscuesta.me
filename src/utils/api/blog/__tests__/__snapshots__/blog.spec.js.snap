// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ghost API Client fetchPost should return a post with the slug terminal-setup 1`] = `
Object {
  "dateModified": "2016-02-06 15:55",
  "datePublished": Object {
    "formatDate": "06 February 2016",
    "formatInWords": "over 4 years ago",
    "value": "2016-02-06 15:55",
  },
  "disqusIdentifier": "7",
  "excerpt": "Carlos Cuesta terminal setup with ZSH and Oh-My-ZSH, using materialshell and my dotfiles.",
  "html": "<p><strong>Terminal</strong> is a place where a developer spends a lot of time, running commands, looking for outputs and doing a bunch of stuff, so better to stay comfortable and productive with it.</p>
<h3 id=\\"shell\\"><a href=\\"#shell\\" class=\\"headingLink \\"><span>#</span></a>Shell</h3>
<p>I use <a href=\\"http://www.zsh.org\\" target=\\"_blank\\" rel=\\"nofollow noopener noreferrer\\"><strong>ZSH</strong></a> as my main shell along with <a href=\\"http://ohmyz.sh\\" target=\\"_blank\\" rel=\\"nofollow noopener noreferrer\\"><strong>Oh-My-Zsh</strong></a>. By default, OS X comes with bash, a simpler shell. To setup ZSH and install Oh-My-Zsh run:</p>
<pre><code class=\\"language-language-bash\\">$ chsh -s /bin/zsh
$ sh -c \\"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\\"
</code></pre>
<p>To see what shell are you using run:</p>
<pre><code class=\\"language-language-bash\\">$ echo $SHELL
</code></pre>
<h3 id=\\"ui\\"><a href=\\"#ui\\" class=\\"headingLink \\"><span>#</span></a>UI</h3>
<p>After setting up ZSH and Oh-My-Zsh, now we are ready to customize and put our shell on steroids.</p>
<p>I use a theme called <a href=\\"https://github.com/carloscuesta/materialshell\\" target=\\"_blank\\" rel=\\"nofollow noopener noreferrer\\"><strong>materialshell</strong></a> that I've made for my own.</p>
<p><a href=\\"https://github.com/carloscuesta/materialshell/blob/master/README.md\\" target=\\"_blank\\" rel=\\"nofollow noopener noreferrer\\"><strong>Follow this guide to install and setup my terminal</strong>.</a></p>
<p><img src=\\"https://res.cloudinary.com/carloscuesta/image/upload/v1454753967/gazne7uhxuq8ugpfvile.png\\" alt=\\"Carlos Cuesta Shell - MaterialShell\\"></p>
<h3 id=\\"dotfiles\\"><a href=\\"#dotfiles\\" class=\\"headingLink \\"><span>#</span></a>Dotfiles</h3>
<p>I have my own <a href=\\"https://github.com/carloscuesta/dotfiles\\" target=\\"_blank\\" rel=\\"nofollow noopener noreferrer\\"><strong>dotfiles repository</strong></a> with all my shell configuration files, where you can take a look to learn and be more productive with your shell.</p>
",
  "images": Object {
    "featured": Object {
      "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1593531858/blog-featured-images/Terminal_Setup.png",
    },
    "preview": Object {
      "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1593531858/blog-featured-images/Terminal_Setup.png",
      "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1593531858/blog-featured-images/Terminal_Setup.png",
    },
  },
  "slug": "terminal-setup",
  "title": "Terminal setup",
}
`;

exports[`Ghost API Client fetchPosts should return an array of posts sorted by datePublished 1`] = `
Array [
  Object {
    "datePublished": Object {
      "formatDate": "01 October 2019",
      "formatInWords": "9 months ago",
      "value": "2019-10-01 22:15",
    },
    "excerpt": "A guide to create JavaScript monorepos with Lerna and Yarn Workspaces. Explaining what is a monorepo, what are they useful for and how to create one with a code example",
    "images": Object {
      "featured": Object {
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1593531857/blog-featured-images/JavaScript_monorepos_with_Lerna_and_Yarn_Workspaces.png",
      },
      "preview": Object {
        "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1593531857/blog-featured-images/JavaScript_monorepos_with_Lerna_and_Yarn_Workspaces.png",
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1593531857/blog-featured-images/JavaScript_monorepos_with_Lerna_and_Yarn_Workspaces.png",
      },
    },
    "slug": "javascript-monorepos-lerna-yarn-workspaces",
    "title": "JavaScript monorepos with Lerna and Yarn Workspaces",
  },
  Object {
    "datePublished": Object {
      "formatDate": "12 September 2019",
      "formatInWords": "10 months ago",
      "value": "2019-09-12 17:00",
    },
    "excerpt": "I'm going to explain why it's important and how you can use error boundaries in a React-Native application to improve error resiliency üë®‚Äçüíª",
    "images": Object {
      "featured": Object {
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1593531857/blog-featured-images/Managing_React-Native_crashes_with_Error_Boundaries.png",
      },
      "preview": Object {
        "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1593531857/blog-featured-images/Managing_React-Native_crashes_with_Error_Boundaries.png",
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1593531857/blog-featured-images/Managing_React-Native_crashes_with_Error_Boundaries.png",
      },
    },
    "slug": "managing-react-native-crashes-with-error-boundaries",
    "title": "Managing React-Native crashes with Error Boundaries",
  },
  Object {
    "datePublished": Object {
      "formatDate": "16 October 2018",
      "formatInWords": "over 1 year ago",
      "value": "2018-10-16 12:10",
    },
    "excerpt": "Creating scalable React components using the folder pattern. A simple way to organize and structure React Components.",
    "images": Object {
      "featured": Object {
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1593531857/blog-featured-images/Scalable_React_Components_architecture.png",
      },
      "preview": Object {
        "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1593531857/blog-featured-images/Scalable_React_Components_architecture.png",
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1593531857/blog-featured-images/Scalable_React_Components_architecture.png",
      },
    },
    "slug": "scalable-react-components-architecture",
    "title": "Scalable React Components architecture",
  },
]
`;

exports[`Ghost API Client getPostSlugs should match getPostSlugs 1`] = `
Array [
  "2016-year-in-review",
  "chrome-devtools-customization",
  "debugging-with-the-javascript-console",
  "discovering-hyperterm",
  "git-development-workflow",
  "greenkeeper",
  "hello-world",
  "how-to-deploy-static-sites-with-surge",
  "https-cloudflare",
  "javascript-monorepos-lerna-yarn-workspaces",
  "keep-npm-dependencies-up-to-date",
  "managing-react-native-crashes-with-error-boundaries",
  "mastering-and-hacking-slack",
  "moving-to-digitalocean",
  "react-amsterdam-2017",
  "react-native-meets-codepush",
  "reactiveconf-2017",
  "scalable-react-components-architecture",
  "shipping-react-native-apps-with-fastlane",
  "shipping-react-native-fastlane-travis",
  "terminal-setup",
]
`;

exports[`Ghost API Client mutators transformPost should match the mutated post 1`] = `
Object {
  "dateModified": "2016-02-06 15:55",
  "datePublished": Object {
    "formatDate": "06 February 2016",
    "formatInWords": "over 4 years ago",
    "value": "2016-02-06 15:55",
  },
  "disqusIdentifier": "7",
  "excerpt": "Carlos Cuesta terminal setup with ZSH and Oh-My-ZSH, using materialshell and my dotfiles.",
  "html": "[object Object]",
  "images": Object {
    "featured": Object {
      "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1454754838/kcuq34zbo1yieygmx0y6.png",
    },
    "preview": Object {
      "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1454754838/kcuq34zbo1yieygmx0y6.png",
      "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1454754838/kcuq34zbo1yieygmx0y6.png",
    },
  },
  "slug": "terminal-setup",
  "title": "Terminal setup",
}
`;
