// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ghost API Client fetchPost should return a post with the slug terminal-setup 1`] = `
Object {
  "dateModified": "2016-02-06 15:55",
  "datePublished": Object {
    "formatDate": "06 February 2016",
    "formatInWords": "over 4 years ago",
    "value": "2016-02-06 15:55",
  },
  "disqusIdentifier": "7",
  "excerpt": "Carlos Cuesta terminal setup with ZSH and Oh-My-ZSH, using materialshell and my dotfiles.",
  "html": "<p><strong>Terminal</strong> is a place where a developer spends a lot of time, running commands, looking for outputs and doing a bunch of stuff, so better to stay comfortable and productive with it.<h3 id=shell><a href=#shell aria-hidden=true tabindex=-1><span class=headingLink>#</span></a>Shell</h3><p>I use <a href=http://www.zsh.org rel=\\"nofollow noopener noreferrer\\"target=_blank><strong>ZSH</strong></a> as my main shell along with <a href=http://ohmyz.sh rel=\\"nofollow noopener noreferrer\\"target=_blank><strong>Oh-My-Zsh</strong></a>. By default, OS X comes with bash, a simpler shell. To setup ZSH and install Oh-My-Zsh run:<pre class=language-language-bash><code class=language-language-bash>$ chsh -s /bin/zsh
$ sh -c \\"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\\"
</code></pre><p>To see what shell are you using run:<pre class=language-language-bash><code class=language-language-bash>$ echo $SHELL
</code></pre><h3 id=ui><a href=#ui aria-hidden=true tabindex=-1><span class=headingLink>#</span></a>UI</h3><p>After setting up ZSH and Oh-My-Zsh, now we are ready to customize and put our shell on steroids.<p>I use a theme called <a href=https://github.com/carloscuesta/materialshell rel=\\"nofollow noopener noreferrer\\"target=_blank><strong>materialshell</strong></a> that I've made for my own.<p><a href=https://github.com/carloscuesta/materialshell/blob/master/README.md rel=\\"nofollow noopener noreferrer\\"target=_blank><strong>Follow this guide to install and setup my terminal</strong>.</a><p><img alt=\\"Carlos Cuesta Shell - MaterialShell\\"src=https://res.cloudinary.com/carloscuesta/image/upload/v1454753967/gazne7uhxuq8ugpfvile.png><h3 id=dotfiles><a href=#dotfiles aria-hidden=true tabindex=-1><span class=headingLink>#</span></a>Dotfiles</h3><p>I have my own <a href=https://github.com/carloscuesta/dotfiles rel=\\"nofollow noopener noreferrer\\"target=_blank><strong>dotfiles repository</strong></a> with all my shell configuration files, where you can take a look to learn and be more productive with your shell.",
  "images": Object {
    "featured": Object {
      "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1593531858/blog-featured-images/Terminal_Setup.png",
    },
    "preview": Object {
      "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1593531858/blog-featured-images/Terminal_Setup.png",
      "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1593531858/blog-featured-images/Terminal_Setup.png",
    },
  },
  "readingTime": "1 min read",
  "slug": "terminal-setup",
  "title": "Terminal setup",
}
`;

exports[`Ghost API Client fetchPosts should return an array of posts sorted by datePublished 1`] = `
Array [
  Object {
    "datePublished": Object {
      "formatDate": "23 May 2022",
      "formatInWords": "in almost 2 years",
      "value": "2022-05-23 17:55",
    },
    "excerpt": "Let's walk through the experience and the outcome of implementing a tool to generate code. What are the benefits, the problems they solve and how to implement them.",
    "images": Object {
      "featured": Object {
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1653167435/blog-featured-images/Code_generators.png",
      },
      "preview": Object {
        "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1653167435/blog-featured-images/Code_generators.png",
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1653167435/blog-featured-images/Code_generators.png",
      },
    },
    "slug": "using-generators-to-improve-developer-productivity",
    "title": "Using generators to improve Developer productivity",
  },
  Object {
    "datePublished": Object {
      "formatDate": "01 March 2022",
      "formatInWords": "in over 1 year",
      "value": "2022-03-01 22:00",
    },
    "excerpt": "An architecture decision record also known as ADR, is a document that captures an important architecture decision, including the context and the consequences.",
    "images": Object {
      "featured": Object {
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1646170453/blog-featured-images/writing-adrs.png",
      },
      "preview": Object {
        "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1646170453/blog-featured-images/writing-adrs.png",
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1646170453/blog-featured-images/writing-adrs.png",
      },
    },
    "slug": "writing-architecture-decision-records",
    "title": "Writing Architecture Decision Records",
  },
  Object {
    "datePublished": Object {
      "formatDate": "03 May 2021",
      "formatInWords": "in 10 months",
      "value": "2021-05-03 22:00",
    },
    "excerpt": "Finite State Machines is a computation model useful for building user interfaces, especially nowadays that front-end apps are becoming much more complex.",
    "images": Object {
      "featured": Object {
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1620078331/blog-featured-images/composing-uis-with-fsm.png",
      },
      "preview": Object {
        "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1620078331/blog-featured-images/composing-uis-with-fsm.png",
        "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1620078331/blog-featured-images/composing-uis-with-fsm.png",
      },
    },
    "slug": "composing-uis-with-finite-state-machines",
    "title": "Composing UIs with Finite State Machines",
  },
]
`;

exports[`Ghost API Client getPostSlugs should match getPostSlugs 1`] = `
Array [
  "2016-year-in-review",
  "chrome-devtools-customization",
  "composing-uis-with-finite-state-machines",
  "debugging-with-the-javascript-console",
  "discovering-hyperterm",
  "front-end-tooling-guide-to-improve-developer-experience",
  "functional-programming-in-javascript",
  "git-development-workflow",
  "greenkeeper",
  "hello-world",
  "how-to-deploy-static-sites-with-surge",
  "https-cloudflare",
  "immutability-in-javascript",
  "javascript-monorepos-lerna-yarn-workspaces",
  "keep-npm-dependencies-up-to-date",
  "managing-react-native-crashes-with-error-boundaries",
  "mastering-and-hacking-slack",
  "moving-to-digitalocean",
  "moving-ulabox-to-nextjs",
  "react-amsterdam-2017",
  "react-native-meets-codepush",
  "reactiveconf-2017",
  "scalable-react-components-architecture",
  "shipping-react-native-apps-with-fastlane",
  "shipping-react-native-fastlane-travis",
  "terminal-setup",
  "using-generators-to-improve-developer-productivity",
  "working-remotely-as-a-software-engineer",
  "writing-architecture-decision-records",
]
`;

exports[`Ghost API Client mutators transformPost should match the mutated post 1`] = `
Object {
  "dateModified": "2016-02-06 15:55",
  "datePublished": Object {
    "formatDate": "06 February 2016",
    "formatInWords": "over 4 years ago",
    "value": "2016-02-06 15:55",
  },
  "disqusIdentifier": "7",
  "excerpt": "Carlos Cuesta terminal setup with ZSH and Oh-My-ZSH, using materialshell and my dotfiles.",
  "html": "[object Object]",
  "images": Object {
    "featured": Object {
      "src": "https://res.cloudinary.com/carloscuesta/image/upload/v1454754838/kcuq34zbo1yieygmx0y6.png",
    },
    "preview": Object {
      "lqpi": "https://res.cloudinary.com/carloscuesta/image/upload/t_post-preview-lqpi/v1454754838/kcuq34zbo1yieygmx0y6.png",
      "src": "https://res.cloudinary.com/carloscuesta/image/upload/w_500/v1454754838/kcuq34zbo1yieygmx0y6.png",
    },
  },
  "readingTime": "1 min read",
  "slug": "terminal-setup",
  "title": "Terminal setup",
}
`;
